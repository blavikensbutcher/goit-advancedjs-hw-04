/* empty css                      */import{a as w,S as v,i as n}from"./assets/vendor-BCVp9CTC.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const p of o.addedNodes)p.tagName==="LINK"&&p.rel==="modulepreload"&&i(p)}).observe(document,{childList:!0,subtree:!0});function s(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(t){if(t.ep)return;t.ep=!0;const o=s(t);fetch(t.href,o)}})();async function h(e,r=1,s){const i={key:"41061573-024b7cbeabeac3d17174d6333",q:String(e),image_type:"photo",orientation:"horizontal",safesearch:"true",page:r,per_page:s},t=new URLSearchParams(i);return(await w.get(`https://pixabay.com/api/?${t}`)).data}function m(e){return`
    <a class="gallery__item" href="${e.largeImageURL}">
      <div class="photo-card">
        <img src="${e.webformatURL}" alt="${e.tags}" loading="lazy" />
        <div class="info">
          <p><b>Likes:</b> ${e.likes}</p>
          <p><b>Views:</b> ${e.views}</p>
          <p><b>Comments:</b> ${e.comments}</p>
          <p><b>Downloads:</b> ${e.downloads}</p>
        </div>
      </div>
    </a>`}function S(e,r){e.innerHTML=r.map(m).join("")}function q(e,r){e.insertAdjacentHTML("beforeend",r.map(m).join(""))}function R(e){e.innerHTML=""}function g(e){e.classList.remove("is-hidden")}function y(e){e.classList.add("is-hidden")}function $(e){e.classList.remove("is-hidden")}function b(e){e.classList.add("is-hidden")}const P=document.querySelector("#search-form"),C=document.querySelector("#search-input"),d=document.querySelector(".gallery"),u=document.querySelector("#loader"),a=document.querySelector(".load-more-btn");let l="",c=1;const f=15,L=new v(".gallery a",{captionsData:"alt",captionDelay:250}),E=async()=>{try{c+=1,g(u),a.disabled=!0;const{hits:e,totalHits:r}=await h(l,c,f);q(d,e),L.refresh();const s=d.firstElementChild;if(s){const{height:i}=s.getBoundingClientRect();window.scrollBy({top:i*2,behavior:"smooth"})}f*c>=r&&(b(a),n.info({message:"We're sorry, but you've reached the end of search results.",position:"topRight"}))}catch{n.error({message:"Error while loading more images!",position:"topRight"})}finally{y(u),a.disabled=!1}};a.addEventListener("click",E);P.addEventListener("submit",async e=>{if(e.preventDefault(),l=C.value.trim(),c=1,!l){n.warning({message:"Input text to search!"});return}R(d),g(u),b(a);try{const{hits:r,totalHits:s}=await h(l,c,f);if(!r.length){n.info({message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight"});return}S(d,r),L.refresh(),n.success({message:`We found ${s} results.`,position:"topRight"}),s>f&&$(a)}catch{n.error({message:"Error during loading!",position:"topRight"})}finally{y(u)}});
//# sourceMappingURL=index.js.map
